name: Pull Request To Main
run-name: Run All Tests
on:
  pull_request:
    branches:
      - 'main'
jobs:
  unit_testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Unit Tests
        run: |
          chmod +x ./test/unit-tests.sh
          ./test/unit-tests.sh
  integration_testing:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:6.0-alpine
    services:
      db:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install dependencies
        run: dotnet restore src/app/app.csproj
      - name: Build
        run: dotnet build src/app/app.csproj --no-restore
      - name: Run app
        run: dotnet run --project src/app/app.csproj --no-restore &
      - name: Sleep
        run: sleep 15;
      - name: Trying to connect
        run: curl "http://127.0.0.1:5000/"
      - name: Set variable 1 in 122 val
        run: curl -X POST -d "Name=123&Value=122" "http://localhost:5000/Vars/Create/"
      - name: Test getting the value of a variable
        run: |
          VALUE=$(curl http://127.0.0.1:5000/Vars/Details/1)
          if [ "$VALUE" != "122" ]; then
          exit $VALUE
          else
          echo "Integration Test PASS"
          fi 
  mega_hard_testing:
    needs: [unit_testing, integration_testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Mega Hard Tests
        run: |
          chmod +x ./test/all-mega-hard-tests.sh
          ./test/all-mega-hard-tests.sh
